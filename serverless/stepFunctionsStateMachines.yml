stateMachines:
  storeCheckoutFlow:
    name: StoreCheckoutFlow
    definition:
      StartAt: checkInventory
      States:
        checkInventory:
          Type: Task
          Resource:
            Fn::GetAtt: [checkInventory, Arn]
          Catch:
            - ErrorEquals: [BookNotFound]
              Next: BookNotFoundError
            - ErrorEquals: [BookOutOfStock]
              Next: BookOutOfStockError
          ResultPath: "$.book"
          Next: calculateTotal
        calculateTotal:
          Type: Task
          Resource:
            Fn::GetAtt: [calculateTotal, Arn]
          ResultPath: "$.total"
          Next: isRedeemNeeded
        isRedeemNeeded:
          Type: Choice
          Choices:
            - Variable: $.redeem
              BooleanEquals: true
              Next: RedeemPoints
          Default: BillCustomer
        RedeemPoints:
          Type: Task
          Resource:
            Fn::GetAtt: [redeemPoints, Arn]
          ResultPath: "$.total"
          Catch:
            - ErrorEquals: [States.ALL]
              Next: RedeemPointsError
          Next: BillCustomer
        BillCustomer:
          Type: Task
          Resource:
            Fn::GetAtt: [billCustomer, Arn]
          ResultPath: "$.billingStatus"
          Retry:
            - ErrorEquals: [States.ALL]
              MaxAttempts: 3
          Catch:
            - ErrorEquals: [States.ALL]
              ResultPath: "$.customerBilling"
              Next: BillingError
          Next: PrepareOrder
        PrepareOrder:
          Type: Task
          Resource: arn:aws:states:::sqs:sendMessage.waitForTaskToken
          Parameters:
            QueueUrl: !Ref OrdersQueue
            MessageBody:
              Input.$: "$"
              Token.$: "$$.Task.Token" # From the context
          ResultPath: "$.courierStatus"
          Catch:
            - ErrorEquals: [NoCourierAvailable]
              ResultPath: "$.courierError"
              Next: RefundCustomer
          Next: DispatchOrder
        DispatchOrder:
          Type: Task
          Resource: arn:aws:states:::sns:publish
          Parameters:
            TopicArn: !Ref OrdersTopic
            Message.$: "$"
          Next: Dispatched
        Dispatched:
          Type: Pass
          Result: "Your order will be dispatched in 24 hours"
          End: true
        RefundCustomer:
          Type: Pass
          Result: "Customer is refunded"
          ResultPath: "$.refundStatus"
          Next: RestoreQuantity
        RestoreQuantity:
          Type: Task
          Resource:
            Fn::GetAtt: [restoreQuantity, Arn]
          ResultPath: "$.quantityRestoreStatus"
          Next: RestoreRedeemPoints
        BookNotFoundError:
          Type: Pass
          Result: "No such book available"
          End: true
        BookOutOfStockError:
          Type: Pass
          Result: "Sorry, the book is out of stock"
          End: true
        RedeemPointsError:
          Type: Pass
          Result: "Error in redeeming points"
          End: true
        BillingError:
          Type: Pass
          Result: "Billing error"
          ResultPath: "$.billingStatus"
          Next: RestoreRedeemPoints
        RestoreRedeemPoints:
          Type: Task
          Resource:
            Fn::GetAtt: [restoreRedeemPoints, Arn]
          End: true
